NB. Find the smallest pair of pentagonal numbers whose sum and difference is
NB. pentagonal.
NB. 
NB. Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten
NB. pentagonal numbers are:
NB. 
NB. 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
NB. 
NB. It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
NB. 70 - 22 = 48, is not pentagonal.
NB. 
NB. Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
NB. difference is pentagonal and D = |Pk - Pj| is minimised; what is the value
NB. of D?

NB. Pentagonal Number.
P =: -: @: (]-~ 3* *:)
NB. P is half the difference between y and three times the square of y.

NB. Inverse of Pentagonal Number function.
Q =: 6%~ >: %: >: 24*]
NB. Q is one-sixth the successor of the square root of the successor of the product of 24 and y.
NB. This is what it should be. But because of the stupid trains, I have to cap every stupid operation:
NB.  ([: >:([: %: ([: >:24*]))) 22
NB. At this point I got fed up with J and its trains. So I quit J. I moved past this problem in NARS APL. Now I've got some J examples to look at below.

NB. Picking up J again, since I've surpassed this problem in APL, without the stupid trains.
Q =: 6%~ ([: >:([: %: ([: >:24*])))

isPentagonal =: isP =: 3 : 0
  k =. Q y
  1e_5 > | (<. k) - k
)

ps =: P >:i.1e6 NB. First one million Pentagonal Numbers.

NB. And here's yet another situation where J doesn't do what it's supposed to do.
ps,/ps NB. Should give me a table of pairs of Pentagonal numbers. That's what it does in APL (ps{jot}.,ps).
NB. So how the f*ck do I get a table of pairs in J?




NB. olegyk:
  pp=: 13 : '(0.5+%:0.25+6*y.)%3'
  ps=: + *.&pp |@-
  P=: (-: * <:@(3&*))
  1+i.10000 I.,ps"0/~P
10192166 21661019
  10":-/(10000 10000#:10192166){P
_5482660




NB. rminhas:
li =. (>/ #&(,/) ,"0/)~ 5+6*i.2500          NB. 5 mod 6 number pairs
gf =. (%&24)@:<:@:*:                        NB. Generator function
a =. (5: = 6&|)@:%:@:<:@: (*:@{. + *:@{:)"1 NB. Monad to check that sum is 5 mod 6
b =. (5: = 6&|)@:%:@:>:@: (*:@{. - *:@{:)"1 NB. Monad to check that diff is 5 mod 6
x:-/ {.(gf #~ a *. b) li                    NB. Take the smallest pair




NB. Edushka:
pn=:[:-:]-~3:**:
-/ x: pn >: ((],{~) 1: i.~ >&0) ([:(+./*(i.&1)){:(-(*.&(e.&(pn i.3000)))+)}:)\ pn >: i.3000
5482660

NB. vim:ft=j
